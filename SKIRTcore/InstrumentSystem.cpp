/*//////////////////////////////////////////////////////////////////
////       SKIRT -- an advanced radiative transfer code         ////
////       Â© Astronomical Observatory, Ghent University         ////
///////////////////////////////////////////////////////////////// */

#include "FatalError.hpp"
#include "Instrument.hpp"
#include "InstrumentSystem.hpp"

using namespace std;

//////////////////////////////////////////////////////////////////////

InstrumentSystem::InstrumentSystem()
{
}

//////////////////////////////////////////////////////////////////////

void InstrumentSystem::insertInstrument(int index, Instrument* value)
{
    if (!value) throw FATALERROR("Instrument pointer shouldn't be null");
    value->setParent(this);
    _instruments.insert(index, value);
}

//////////////////////////////////////////////////////////////////////

void InstrumentSystem::removeInstrument(int index)
{
    delete _instruments.takeAt(index);
}

//////////////////////////////////////////////////////////////////////

QList<Instrument*> InstrumentSystem::instruments() const
{
    return _instruments;
}

//////////////////////////////////////////////////////////////////////

void InstrumentSystem::write()
{
    foreach (Instrument* instrument, _instruments) instrument->write();
}

//////////////////////////////////////////////////////////////////////

void InstrumentSystem::reset()
{
    foreach (Instrument* instrument, _instruments) instrument->reset();
}

//////////////////////////////////////////////////////////////////////
